/*
 * generated by Xtext 2.10.0
 */
package xtraitj.formatting2

import org.eclipse.xtext.formatting2.IFormattableDocument
import org.eclipse.xtext.xbase.annotations.formatting2.XbaseWithAnnotationsFormatter
import xtraitj.xtraitj.TJClass
import xtraitj.xtraitj.TJDeclaration
import xtraitj.xtraitj.TJProgram
import xtraitj.xtraitj.TJTrait

import static xtraitj.xtraitj.XtraitjPackage.Literals.*

class XtraitjFormatter extends XbaseWithAnnotationsFormatter {

	def dispatch void format(TJProgram program, extension IFormattableDocument document) {
		format(program.getImportSection(), document);
		for (TJDeclaration e : program.getElements()) {
			e.format;
			e.append[setNewLines(1, 1, 2)]
		}
	}

	def dispatch void format(TJTrait t, extension IFormattableDocument document) {
		formatDeclaration(t, document)
	}

	def dispatch void format(TJClass c, extension IFormattableDocument document) {
		formatDeclaration(c, document)
	}

	def private void formatDeclaration(TJDeclaration d, extension IFormattableDocument document) {
		val open = d.regionFor.keyword("{")
		val close = d.regionFor.keyword("}")
		d.regionFor.feature(TJ_DECLARATION__NAME).surround[oneSpace]
		for (typeParameter : d.getTypeParameters()) {
			typeParameter.format;
		}
		open.append[newLine]
		interior(open, close)[indent]
		for (member : d.members) {
			member.format
			member.append[setNewLines(1, 1, 2)]
		}
	}
}
